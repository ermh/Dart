# Copyright (c) 2011, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

vars = {
  "gyp_rev": "@937",
  "co19_rev": "@54",
  "co19_repo": "https://co19.googlecode.com/svn/trunk/co19/",
  "dart_branch": "/branches/bleeding_edge/dart"
}

deps = {
  "compiler":
    Var("dart_branch") + "/compiler",

  "corelib":
    Var("dart_branch") + "/corelib",

  "language":
    Var("dart_branch") + "/language",

  "tests":
    Var("dart_branch") + "/tests",

  "tools":
    Var("dart_branch") + "/tools",

  # dartc runs the VM's tests.
  "runtime":
    Var("dart_branch") + "/runtime",

  # dartc compiles the client code as a test.
  "client":
    Var("dart_branch") + "/client",

   # dartc compiles the samples code as a test.
   "samples":
    Var("dart_branch") + "/samples",

  # Stuff needed for GYP to run.
  "third_party/gyp":
    "http://gyp.googlecode.com/svn/trunk" + Var("gyp_rev"),

  # Build time dependencies for dartc
  "third_party/apache_ant":
    Var("dart_branch") + "/third_party/apache_ant",

  "third_party/args4j":
    Var("dart_branch") + "/third_party/args4j",

  "third_party/closure_compiler_src":
    "http://closure-compiler.googlecode.com/svn/trunk",

  "third_party/guava":
    Var("dart_branch") + "/third_party/guava",

  "third_party/hamcrest":
    Var("dart_branch") + "/third_party/hamcrest",

  "third_party/json":
    Var("dart_branch") + "/third_party/json",

  "third_party/junit":
    Var("dart_branch") + "/third_party/junit",

  "third_party/rhino":
    Var("dart_branch") + "/third_party/rhino",

  "third_party/v8":
    "http://v8.googlecode.com/svn/branches/3.4",

  "co19":
    Var("dart_branch") + "co19",

  "co19/tests/co19/src":
    Var("co19_repo") + "tests/co19/src" + Var("co19_rev"),
}

hooks = [
  {
    "pattern": ".",
    "action": ["python", "compiler/scripts/generate_my_projects.py"],
  },
  {
    "pattern": ".",
    "action": ["python", "tools/generate_projects.py", "compiler"],
  },
]
